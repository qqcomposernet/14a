def func6(arg33, arg34):
    if arg34 < arg33:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in xrange(25):
        var41 = var39.func8
        var41(var40, var40)
    if arg34 < arg34:
        var46 = class11()
    else:
        var46 = class13()
    for var47 in xrange(26):
        var46.func12(arg33, arg34)
    var52 = func15(arg34, arg33)
    var53 = (-410 + 983 - 241801194) & -1494903063
    var54 = (arg33 | arg33) | arg34 + var52
    var55 = -984115546 ^ arg34 + var52 | var52
    var56 = var55 & (var53 + var55 | 586)
    var57 = 2098007140 - arg34 + var52 + var56
    var58 = var57 + -1992921377
    if arg33 < var56:
        var59 = ((arg34 | arg33) & var56) & 1638148748
    else:
        var59 = var52 ^ (var53 - var54)
    var60 = arg34 ^ arg33
    var61 = arg34 & arg33
    var62 = -108 | (-60 & var60) | 783
    var63 = -204 | var58 & var57 - 539
    var64 = (var60 + var62 - 424776559) & var56
    var65 = var58 - ((var62 & arg34) | 898913854)
    var66 = arg33 | var65 & var57 - -122
    var67 = var62 - var52 + var58 | var57
    var68 = var64 - var57
    var69 = var56 & var61 + var55
    var70 = var56 - (var67 ^ var54 | var67)
    result = var57 | arg34 & -620 - var52
    return result
def func15(arg48, arg49):
    var50 = 0
    for var51 in range(23):
        var50 += var50 + var51 ^ var50
    return var50
class class13(object):
    def func12(self, arg44, arg45):
        result = arg45 & arg45
        return result
class class11(object):
    def func12(self, arg42, arg43):
        result = 1 + (-752645228 ^ (arg42 ^ (-1914812757 & 392242100) - 0) + arg43)
        return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1906399878 - arg38 - arg37 & 0 | -1062680637 + arg38 | arg37
        return result
class class7(object):
    def func8(self, arg35, arg36):
        return 0
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = func5()
    var9 = (-1488818931 | -905705998) + var8 ^ var7
    var10 = var7 & arg2 & arg2 - var9
    var11 = var7 + (var8 | var9 | var8)
    var12 = var9 & (-351130762 & var8) + arg1
    var13 = -959 - var9 ^ var11 + arg1
    var14 = arg2 ^ 6
    var15 = arg2 + var10 - var7
    var16 = var8 & (986 + var8 ^ var7)
    var17 = var7 ^ var16
    var18 = (var11 - var13) ^ arg2
    var19 = var17 - var8
    var20 = 345270438 | var15
    if var8 < var18:
        var21 = var10 | var16 & var15 ^ var14
    else:
        var21 = ((var17 - var12) - var16) + var9
    var22 = var19 - (var20 & var14) | var14
    var23 = var20 + var7 ^ (var11 | var10)
    var24 = arg2 - var18 + var19 ^ var12
    var25 = var9 ^ arg1 - var10 & var13
    var26 = var23 ^ (var8 - 476 + var22)
    var27 = var12 + var14 & (var9 - var24)
    var28 = var7 | arg1 + var23 & var24
    var29 = (203 + var24) + var14 + var20
    var30 = arg2 + (var8 & var7)
    var31 = var28 & arg2 & arg1 ^ var7
    var32 = var24 ^ var29
    result = arg2 & arg2
    return result
def func5():
    func3()
    result = len(range(7))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : 7
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(23):
        var5 += arg3 - (3 | 2)
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 6'
    print 'arg_number: 33'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,def func6(arg33, arg34):
    if arg34 < arg33:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in xrange(25):
        var41 = var39.func8
        var41(var40, var40)
    if arg34 < arg34:
        var46 = class11()
    else:
        var46 = class13()
    for var47 in xrange(26):
        var46.func12(arg33, arg34)
    var52 = func15(arg34, arg33)
    var53 = (-410 + 983 - 241801194) & -1494903063
    var54 = (arg33 | arg33) | arg34 + var52
    var55 = -984115546 ^ arg34 + var52 | var52
    var56 = var55 & (var53 + var55 | 586)
    var57 = 2098007140 - arg34 + var52 + var56
    var58 = var57 + -1992921377
    if arg33 < var56:
        var59 = ((arg34 | arg33) & var56) & 1638148748
    else:
        var59 = var52 ^ (var53 - var54)
    var60 = arg34 ^ arg33
    var61 = arg34 & arg33
    var62 = -108 | (-60 & var60) | 783
    var63 = -204 | var58 & var57 - 539
    var64 = (var60 + var62 - 424776559) & var56
    var65 = var58 - ((var62 & arg34) | 898913854)
    var66 = arg33 | var65 & var57 - -122
    var67 = var62 - var52 + var58 | var57
    var68 = var64 - var57
    var69 = var56 & var61 + var55
    var70 = var56 - (var67 ^ var54 | var67)
    result = var57 | arg34 & -620 - var52
    return result
def func15(arg48, arg49):
    var50 = 0
    for var51 in range(23):
        var50 += var50 + var51 ^ var50
    return var50
class class13(object):
    def func12(self, arg44, arg45):
        result = arg45 & arg45
        return result
class class11(object):
    def func12(self, arg42, arg43):
        result = 1 + (-752645228 ^ (arg42 ^ (-1914812757 & 392242100) - 0) + arg43)
        return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1906399878 - arg38 - arg37 & 0 | -1062680637 + arg38 | arg37
        return result
class class7(object):
    def func8(self, arg35, arg36):
        return 0
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = func5()
    var9 = (-1488818931 | -905705998) + var8 ^ var7
    var10 = var7 & arg2 & arg2 - var9
    var11 = var7 + (var8 | var9 | var8)
    var12 = var9 & (-351130762 & var8) + arg1
    var13 = -959 - var9 ^ var11 + arg1
    var14 = arg2 ^ 6
    var15 = arg2 + var10 - var7
    var16 = var8 & (986 + var8 ^ var7)
    var17 = var7 ^ var16
    var18 = (var11 - var13) ^ arg2
    var19 = var17 - var8
    var20 = 345270438 | var15
    if var8 < var18:
        var21 = var10 | var16 & var15 ^ var14
    else:
        var21 = ((var17 - var12) - var16) + var9
    var22 = var19 - (var20 & var14) | var14
    var23 = var20 + var7 ^ (var11 | var10)
    var24 = arg2 - var18 + var19 ^ var12
    var25 = var9 ^ arg1 - var10 & var13
    var26 = var23 ^ (var8 - 476 + var22)
    var27 = var12 + var14 & (var9 - var24)
    var28 = var7 | arg1 + var23 & var24
    var29 = (203 + var24) + var14 + var20
    var30 = arg2 + (var8 & var7)
    var31 = var28 & arg2 & arg1 ^ var7
    var32 = var24 ^ var29
    result = arg2 & arg2
    return result
def func5():
    func3()
    result = len(range(7))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : 7
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(23):
        var5 += arg3 - (3 | 2)
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 6'
    print 'arg_number: 33'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,def func6(arg33, arg34):
    if arg34 < arg33:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in xrange(25):
        var41 = var39.func8
        var41(var40, var40)
    if arg34 < arg34:
        var46 = class11()
    else:
        var46 = class13()
    for var47 in xrange(26):
        var46.func12(arg33, arg34)
    var52 = func15(arg34, arg33)
    var53 = (-410 + 983 - 241801194) & -1494903063
    var54 = (arg33 | arg33) | arg34 + var52
    var55 = -984115546 ^ arg34 + var52 | var52
    var56 = var55 & (var53 + var55 | 586)
    var57 = 2098007140 - arg34 + var52 + var56
    var58 = var57 + -1992921377
    if arg33 < var56:
        var59 = ((arg34 | arg33) & var56) & 1638148748
    else:
        var59 = var52 ^ (var53 - var54)
    var60 = arg34 ^ arg33
    var61 = arg34 & arg33
    var62 = -108 | (-60 & var60) | 783
    var63 = -204 | var58 & var57 - 539
    var64 = (var60 + var62 - 424776559) & var56
    var65 = var58 - ((var62 & arg34) | 898913854)
    var66 = arg33 | var65 & var57 - -122
    var67 = var62 - var52 + var58 | var57
    var68 = var64 - var57
    var69 = var56 & var61 + var55
    var70 = var56 - (var67 ^ var54 | var67)
    result = var57 | arg34 & -620 - var52
    return result
def func15(arg48, arg49):
    var50 = 0
    for var51 in range(23):
        var50 += var50 + var51 ^ var50
    return var50
class class13(object):
    def func12(self, arg44, arg45):
        result = arg45 & arg45
        return result
class class11(object):
    def func12(self, arg42, arg43):
        result = 1 + (-752645228 ^ (arg42 ^ (-1914812757 & 392242100) - 0) + arg43)
        return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1906399878 - arg38 - arg37 & 0 | -1062680637 + arg38 | arg37
        return result
class class7(object):
    def func8(self, arg35, arg36):
        return 0
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = func5()
    var9 = (-1488818931 | -905705998) + var8 ^ var7
    var10 = var7 & arg2 & arg2 - var9
    var11 = var7 + (var8 | var9 | var8)
    var12 = var9 & (-351130762 & var8) + arg1
    var13 = -959 - var9 ^ var11 + arg1
    var14 = arg2 ^ 6
    var15 = arg2 + var10 - var7
    var16 = var8 & (986 + var8 ^ var7)
    var17 = var7 ^ var16
    var18 = (var11 - var13) ^ arg2
    var19 = var17 - var8
    var20 = 345270438 | var15
    if var8 < var18:
        var21 = var10 | var16 & var15 ^ var14
    else:
        var21 = ((var17 - var12) - var16) + var9
    var22 = var19 - (var20 & var14) | var14
    var23 = var20 + var7 ^ (var11 | var10)
    var24 = arg2 - var18 + var19 ^ var12
    var25 = var9 ^ arg1 - var10 & var13
    var26 = var23 ^ (var8 - 476 + var22)
    var27 = var12 + var14 & (var9 - var24)
    var28 = var7 | arg1 + var23 & var24
    var29 = (203 + var24) + var14 + var20
    var30 = arg2 + (var8 & var7)
    var31 = var28 & arg2 & arg1 ^ var7
    var32 = var24 ^ var29
    result = arg2 & arg2
    return result
def func5():
    func3()
    result = len(range(7))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : 7
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(23):
        var5 += arg3 - (3 | 2)
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 6'
    print 'arg_number: 33'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,def func6(arg33, arg34):
    if arg34 < arg33:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in xrange(25):
        var41 = var39.func8
        var41(var40, var40)
    if arg34 < arg34:
        var46 = class11()
    else:
        var46 = class13()
    for var47 in xrange(26):
        var46.func12(arg33, arg34)
    var52 = func15(arg34, arg33)
    var53 = (-410 + 983 - 241801194) & -1494903063
    var54 = (arg33 | arg33) | arg34 + var52
    var55 = -984115546 ^ arg34 + var52 | var52
    var56 = var55 & (var53 + var55 | 586)
    var57 = 2098007140 - arg34 + var52 + var56
    var58 = var57 + -1992921377
    if arg33 < var56:
        var59 = ((arg34 | arg33) & var56) & 1638148748
    else:
        var59 = var52 ^ (var53 - var54)
    var60 = arg34 ^ arg33
    var61 = arg34 & arg33
    var62 = -108 | (-60 & var60) | 783
    var63 = -204 | var58 & var57 - 539
    var64 = (var60 + var62 - 424776559) & var56
    var65 = var58 - ((var62 & arg34) | 898913854)
    var66 = arg33 | var65 & var57 - -122
    var67 = var62 - var52 + var58 | var57
    var68 = var64 - var57
    var69 = var56 & var61 + var55
    var70 = var56 - (var67 ^ var54 | var67)
    result = var57 | arg34 & -620 - var52
    return result
def func15(arg48, arg49):
    var50 = 0
    for var51 in range(23):
        var50 += var50 + var51 ^ var50
    return var50
class class13(object):
    def func12(self, arg44, arg45):
        result = arg45 & arg45
        return result
class class11(object):
    def func12(self, arg42, arg43):
        result = 1 + (-752645228 ^ (arg42 ^ (-1914812757 & 392242100) - 0) + arg43)
        return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1906399878 - arg38 - arg37 & 0 | -1062680637 + arg38 | arg37
        return result
class class7(object):
    def func8(self, arg35, arg36):
        return 0
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = func5()
    var9 = (-1488818931 | -905705998) + var8 ^ var7
    var10 = var7 & arg2 & arg2 - var9
    var11 = var7 + (var8 | var9 | var8)
    var12 = var9 & (-351130762 & var8) + arg1
    var13 = -959 - var9 ^ var11 + arg1
    var14 = arg2 ^ 6
    var15 = arg2 + var10 - var7
    var16 = var8 & (986 + var8 ^ var7)
    var17 = var7 ^ var16
    var18 = (var11 - var13) ^ arg2
    var19 = var17 - var8
    var20 = 345270438 | var15
    if var8 < var18:
        var21 = var10 | var16 & var15 ^ var14
    else:
        var21 = ((var17 - var12) - var16) + var9
    var22 = var19 - (var20 & var14) | var14
    var23 = var20 + var7 ^ (var11 | var10)
    var24 = arg2 - var18 + var19 ^ var12
    var25 = var9 ^ arg1 - var10 & var13
    var26 = var23 ^ (var8 - 476 + var22)
    var27 = var12 + var14 & (var9 - var24)
    var28 = var7 | arg1 + var23 & var24
    var29 = (203 + var24) + var14 + var20
    var30 = arg2 + (var8 & var7)
    var31 = var28 & arg2 & arg1 ^ var7
    var32 = var24 ^ var29
    result = arg2 & arg2
    return result
def func5():
    func3()
    result = len(range(7))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : 7
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(23):
        var5 += arg3 - (3 | 2)
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 6'
    print 'arg_number: 33'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,def func6(arg33, arg34):
    if arg34 < arg33:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in xrange(25):
        var41 = var39.func8
        var41(var40, var40)
    if arg34 < arg34:
        var46 = class11()
    else:
        var46 = class13()
    for var47 in xrange(26):
        var46.func12(arg33, arg34)
    var52 = func15(arg34, arg33)
    var53 = (-410 + 983 - 241801194) & -1494903063
    var54 = (arg33 | arg33) | arg34 + var52
    var55 = -984115546 ^ arg34 + var52 | var52
    var56 = var55 & (var53 + var55 | 586)
    var57 = 2098007140 - arg34 + var52 + var56
    var58 = var57 + -1992921377
    if arg33 < var56:
        var59 = ((arg34 | arg33) & var56) & 1638148748
    else:
        var59 = var52 ^ (var53 - var54)
    var60 = arg34 ^ arg33
    var61 = arg34 & arg33
    var62 = -108 | (-60 & var60) | 783
    var63 = -204 | var58 & var57 - 539
    var64 = (var60 + var62 - 424776559) & var56
    var65 = var58 - ((var62 & arg34) | 898913854)
    var66 = arg33 | var65 & var57 - -122
    var67 = var62 - var52 + var58 | var57
    var68 = var64 - var57
    var69 = var56 & var61 + var55
    var70 = var56 - (var67 ^ var54 | var67)
    result = var57 | arg34 & -620 - var52
    return result
def func15(arg48, arg49):
    var50 = 0
    for var51 in range(23):
        var50 += var50 + var51 ^ var50
    return var50
class class13(object):
    def func12(self, arg44, arg45):
        result = arg45 & arg45
        return result
class class11(object):
    def func12(self, arg42, arg43):
        result = 1 + (-752645228 ^ (arg42 ^ (-1914812757 & 392242100) - 0) + arg43)
        return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1906399878 - arg38 - arg37 & 0 | -1062680637 + arg38 | arg37
        return result
class class7(object):
    def func8(self, arg35, arg36):
        return 0
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = func5()
    var9 = (-1488818931 | -905705998) + var8 ^ var7
    var10 = var7 & arg2 & arg2 - var9
    var11 = var7 + (var8 | var9 | var8)
    var12 = var9 & (-351130762 & var8) + arg1
    var13 = -959 - var9 ^ var11 + arg1
    var14 = arg2 ^ 6
    var15 = arg2 + var10 - var7
    var16 = var8 & (986 + var8 ^ var7)
    var17 = var7 ^ var16
    var18 = (var11 - var13) ^ arg2
    var19 = var17 - var8
    var20 = 345270438 | var15
    if var8 < var18:
        var21 = var10 | var16 & var15 ^ var14
    else:
        var21 = ((var17 - var12) - var16) + var9
    var22 = var19 - (var20 & var14) | var14
    var23 = var20 + var7 ^ (var11 | var10)
    var24 = arg2 - var18 + var19 ^ var12
    var25 = var9 ^ arg1 - var10 & var13
    var26 = var23 ^ (var8 - 476 + var22)
    var27 = var12 + var14 & (var9 - var24)
    var28 = var7 | arg1 + var23 & var24
    var29 = (203 + var24) + var14 + var20
    var30 = arg2 + (var8 & var7)
    var31 = var28 & arg2 & arg1 ^ var7
    var32 = var24 ^ var29
    result = arg2 & arg2
    return result
def func5():
    func3()
    result = len(range(7))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : 7
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(23):
        var5 += arg3 - (3 | 2)
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 6'
    print 'arg_number: 33'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,def func6(arg33, arg34):
    if arg34 < arg33:
        var39 = class7()
    else:
        var39 = class9()
    for var40 in xrange(25):
        var41 = var39.func8
        var41(var40, var40)
    if arg34 < arg34:
        var46 = class11()
    else:
        var46 = class13()
    for var47 in xrange(26):
        var46.func12(arg33, arg34)
    var52 = func15(arg34, arg33)
    var53 = (-410 + 983 - 241801194) & -1494903063
    var54 = (arg33 | arg33) | arg34 + var52
    var55 = -984115546 ^ arg34 + var52 | var52
    var56 = var55 & (var53 + var55 | 586)
    var57 = 2098007140 - arg34 + var52 + var56
    var58 = var57 + -1992921377
    if arg33 < var56:
        var59 = ((arg34 | arg33) & var56) & 1638148748
    else:
        var59 = var52 ^ (var53 - var54)
    var60 = arg34 ^ arg33
    var61 = arg34 & arg33
    var62 = -108 | (-60 & var60) | 783
    var63 = -204 | var58 & var57 - 539
    var64 = (var60 + var62 - 424776559) & var56
    var65 = var58 - ((var62 & arg34) | 898913854)
    var66 = arg33 | var65 & var57 - -122
    var67 = var62 - var52 + var58 | var57
    var68 = var64 - var57
    var69 = var56 & var61 + var55
    var70 = var56 - (var67 ^ var54 | var67)
    result = var57 | arg34 & -620 - var52
    return result
def func15(arg48, arg49):
    var50 = 0
    for var51 in range(23):
        var50 += var50 + var51 ^ var50
    return var50
class class13(object):
    def func12(self, arg44, arg45):
        result = arg45 & arg45
        return result
class class11(object):
    def func12(self, arg42, arg43):
        result = 1 + (-752645228 ^ (arg42 ^ (-1914812757 & 392242100) - 0) + arg43)
        return result
class class9(object):
    def func8(self, arg37, arg38):
        result = -1906399878 - arg38 - arg37 & 0 | -1062680637 + arg38 | arg37
        return result
class class7(object):
    def func8(self, arg35, arg36):
        return 0
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = func5()
    var9 = (-1488818931 | -905705998) + var8 ^ var7
    var10 = var7 & arg2 & arg2 - var9
    var11 = var7 + (var8 | var9 | var8)
    var12 = var9 & (-351130762 & var8) + arg1
    var13 = -959 - var9 ^ var11 + arg1
    var14 = arg2 ^ 6
    var15 = arg2 + var10 - var7
    var16 = var8 & (986 + var8 ^ var7)
    var17 = var7 ^ var16
    var18 = (var11 - var13) ^ arg2
    var19 = var17 - var8
    var20 = 345270438 | var15
    if var8 < var18:
        var21 = var10 | var16 & var15 ^ var14
    else:
        var21 = ((var17 - var12) - var16) + var9
    var22 = var19 - (var20 & var14) | var14
    var23 = var20 + var7 ^ (var11 | var10)
    var24 = arg2 - var18 + var19 ^ var12
    var25 = var9 ^ arg1 - var10 & var13
    var26 = var23 ^ (var8 - 476 + var22)
    var27 = var12 + var14 & (var9 - var24)
    var28 = var7 | arg1 + var23 & var24
    var29 = (203 + var24) + var14 + var20
    var30 = arg2 + (var8 & var7)
    var31 = var28 & arg2 & arg1 ^ var7
    var32 = var24 ^ var29
    result = arg2 & arg2
    return result
def func5():
    func3()
    result = len(range(7))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : 7
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(23):
        var5 += arg3 - (3 | 2)
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 6'
    print 'arg_number: 33'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 16'
    print 'arg_number: 71'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
